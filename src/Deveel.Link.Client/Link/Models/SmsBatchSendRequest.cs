// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Link.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A batch of messages that are sent in a single operation
    /// </summary>
    public partial class SmsBatchSendRequest
    {
        /// <summary>
        /// Initializes a new instance of the SmsBatchSendRequest class.
        /// </summary>
        public SmsBatchSendRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SmsBatchSendRequest class.
        /// </summary>
        /// <param name="platformId">The Platform ID provided by LINK
        /// Mobility</param>
        /// <param name="platformPartnerId">The Platform Partner ID provided by
        /// LINK Mobility</param>
        /// <param name="useDeliveryReport">True indicates that a delivery
        /// report should be sent back when the message has come to a final
        /// state</param>
        /// <param name="deliveryReportGates">One or more gates that should be
        /// used for sending delivery reports</param>
        /// <param name="relativeValidityTime">This specifies how long (in
        /// milliseconds) the message is supposed to live</param>
        /// <param name="ignoreResponse">Indicates whether you want a response
        /// in the body when you submit the message.</param>
        public SmsBatchSendRequest(string platformId, string platformPartnerId, bool? useDeliveryReport = default(bool?), IList<string> deliveryReportGates = default(IList<string>), int? relativeValidityTime = default(int?), System.DateTime? absoluteValidityTime = default(System.DateTime?), bool? ignoreResponse = default(bool?), IDictionary<string, object> customParameters = default(IDictionary<string, object>), IList<SmsBatchMessage> sendRequestMessages = default(IList<SmsBatchMessage>))
        {
            UseDeliveryReport = useDeliveryReport;
            DeliveryReportGates = deliveryReportGates;
            RelativeValidityTime = relativeValidityTime;
            AbsoluteValidityTime = absoluteValidityTime;
            PlatformId = platformId;
            PlatformPartnerId = platformPartnerId;
            IgnoreResponse = ignoreResponse;
            CustomParameters = customParameters;
            SendRequestMessages = sendRequestMessages;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets true indicates that a delivery report should be sent
        /// back when the message has come to a final state
        /// </summary>
        [JsonProperty(PropertyName = "useDeliveryReport")]
        public bool? UseDeliveryReport { get; set; }

        /// <summary>
        /// Gets or sets one or more gates that should be used for sending
        /// delivery reports
        /// </summary>
        [JsonProperty(PropertyName = "deliveryReportGates")]
        public IList<string> DeliveryReportGates { get; set; }

        /// <summary>
        /// Gets or sets this specifies how long (in milliseconds) the message
        /// is supposed to live
        /// </summary>
        [JsonProperty(PropertyName = "relativeValidityTime")]
        public int? RelativeValidityTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "absoluteValidityTime")]
        public System.DateTime? AbsoluteValidityTime { get; set; }

        /// <summary>
        /// Gets or sets the Platform ID provided by LINK Mobility
        /// </summary>
        [JsonProperty(PropertyName = "platformId")]
        public string PlatformId { get; set; }

        /// <summary>
        /// Gets or sets the Platform Partner ID provided by LINK Mobility
        /// </summary>
        [JsonProperty(PropertyName = "platformPartnerId")]
        public string PlatformPartnerId { get; set; }

        /// <summary>
        /// Gets or sets indicates whether you want a response in the body when
        /// you submit the message.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreResponse")]
        public bool? IgnoreResponse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customParameters")]
        public IDictionary<string, object> CustomParameters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sendRequestMessages")]
        public IList<SmsBatchMessage> SendRequestMessages { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PlatformId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PlatformId");
            }
            if (PlatformPartnerId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PlatformPartnerId");
            }
            if (SendRequestMessages != null)
            {
                foreach (var element in SendRequestMessages)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
