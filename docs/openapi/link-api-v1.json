{
    "openapi": "3.0.3",
    "info": {
        "title": "LINK Mobility REST API v1.0",
        "version": "v1.0",
        "description": "OpenAPI Specification of the LINK Mobility Common Layer",
        "license": {
            "name": "Apache Public License 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        },
        "contact": {
            "name": "Antonello Provenzano",
            "email": "antonello@deveel.com"
        }
    },
    "servers": [
        {
            "url": "https://wsx.sp247.net/",
            "description": "General API Gateway"
        },
        {
            "url": "https://n-eu.linkmobility.io",
            "description": "Northern Europe (Sweden) Node"
        },
        {
            "url": "https://s-eu.linkmobility.io",
            "description": "Southern European (Spain) Node"
        },
        {
            "url": "https://c-eu.linkmobility.io",
            "description": "Central Europe (Germany) Node"
        },
        {
            "url": "https://no.linkmobility.io",
            "description": "Norwegian Node"
        },
        {
            "url": "https://deb.linkmobility.io",
            "description": "Germany 2 (Franfurt) Node"
        }
    ],
    "security": [{ "basicAuth":[] }],
    "paths": {
        "/number/{number}/keyword": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "number",
                        "description": "The number that the keyword will be routed to",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "operationId": "keyword_create",
                "summary": "Creates a new Keyword Route",
                "description": "Adds a keyword data to the storage by posting a keyword object",
                "tags": ["keyword", "route"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The route as created successfully",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "The URL location where the newly created route is accessible"
                            }
                        }
                    },
                    "400": {
                        "description": "The request was not correctly formatted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "A keyword route for the number already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/number/{number}/keyword/platform/{platformId}/partner/{partnerId}/id/{id}": {
            "parameters": [
                {
                    "in": "path",
                    "required": true,
                    "name": "number",
                    "description": "The number that the keywords are routed to",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "platformId",
                    "required": true,
                    "in": "path",
                    "description": "The ID of the Platform assigned by LINK Mobility",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "partnerId",
                    "required": true,
                    "in": "path",
                    "description": "The ID of the Partner assigned by LINK Mobility",
                    "schema": {
                        "type": "string"
                    }    
                },
                {
                    "name": "id",
                    "required": true,
                    "in": "path",
                    "description": "The ID of the Route to be returned",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "operationId": "keyword_get",
                "summary": "Gets a Keyword Route by ID",
                "description": "Retrieves a keyword route from a partner by its id",
                "tags": ["keyword", "route"],
                "responses": {
                    "200": {
                        "description": "The keyword route was found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The keyword route was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "keyword_update",
                "summary": "Updates a Keyword Route",
                "description": "",
                "tags": ["keyword", "route"],
                "responses": {
                    "204": {
                        "description": "The route was successfully updated"
                    },
                    "400": {
                        "description": "The route object includes some invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The route object already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/number/{number}/keyword/platform/{platformId}/partner/{partnerId}/refid/{refid}": {
            "get": {
                "operationId": "keyword_getByRefId",
                "summary": "Gets a Keyword Route by a Reference ID",
                "tags": ["keyword", "route"],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "number",
                        "description": "The number that the keywords are routed to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "platformId",
                        "required": true,
                        "in": "path",
                        "description": "The ID of the Platform assigned by LINK Mobility",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partnerId",
                        "required": true,
                        "in": "path",
                        "description": "The ID of the Partner assigned by LINK Mobility",
                        "schema": {
                            "type": "string"
                        }    
                    },
                    {
                        "name": "refid",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The keyword route was found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The keyword route was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/number/{number}/keyword/platform/{platformId}/partner/{partnerId}": {
            "get": {
                "operationId": "keyword_getAll",
                "summary": "Lists the Keyword Routes of a Partner",
                "description": "Gets a list of keywords that are mapped within a certain number and that has a certain platformId and a certain partnerId",
                "tags": ["keyword", "route"],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "name": "number",
                        "description": "The number that the keywords are routed to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "platformId",
                        "required": true,
                        "in": "path",
                        "description": "The ID of the Platform assigned by LINK Mobility",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partnerId",
                        "required": true,
                        "in": "path",
                        "description": "The ID of the Partner assigned by LINK Mobility",
                        "schema": {
                            "type": "string"
                        }    
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of Keyword Routes for the Partner is returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The partner was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms/send": {
            "post": {
                "operationId": "sms_send",
                "summary": "",
                "description": "Submits a message object for delivery to a mobile phone",
                "tags": ["sms"],
                "security": [ { "basicAuth":[] } ],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/SmsMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message was sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmsSendResult"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The message was sent and no content is returned"
                    }
                }
            }
        },
        "/sms/sendbatch": {
            "post": {
                "operationId": "sms_batchSend",
                "summary": "Sends a batch of SMS Messages",
                "description": "",
                "tags": ["sms"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmsBatchSendRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The batch send was sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SmsSendResult"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The batch send was sent and there is no content in response"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SmsMessageRequest":{
                "type": "object",
                "description": "Describes a single SMS message object",
                "required": [
                    "source",
                    "destination",
                    "platformId",
                    "platformPartnerId"
                ],
                "properties": {
                    "source": {
                        "nullable": false,
                        "description": " This is the source number from where the message should be sent",
                        "type": "string"
                    },
                    "sourceTON":{
                        "nullable": true,
                        "description": "This is the source type of number. See allowed TON values below.",
                        "$ref": "#/components/schemas/TypeOfNumber",
                        "default": "ALPHANUMERIC"
                    },
                    "destination":{
                        "nullable": false,
                        "description": "This is the destination number",
                        "type": "string"
                    },
                    "destinationTON":{
                        "nullable": true,
                        "description": "This is the destination type of number",
                        "$ref": "#/components/schemas/TypeOfNumber",
                        "default": "MSISDN"
                    },
                    "dcs": {
                        "description": "This is the Data Coding Scheme that should be used when sending the SMS",
                        "$ref": "#/components/schemas/DataCodingScheme",
                        "default": "TEXT"
                    },
                    "userDataHeader": {
                        "type": "string",
                        "description": "This value may be specified when sending concatenated SMS, WAP-push, etc. The format is hex encoded 8-bit bytes"
                    },
                    "userData": {
                        "type": "string",
                        "description": "This is the message content itself. The DCS specifies the format (encoding) on this value"
                    },
                    "priority": {
                        "$ref":"#/components/schemas/Priority",
                        "description": "Specifies the priority to be given to the message"
                    },
                    "age": {
                        "description": "Allowed age for (adult) content",
                        "type": "integer"
                    },
                    "productDescription": {
                        "description": "When sending premium messages, a description of the service",
                        "type": "string"
                    },
                    "productCategory": {
                        "description": "When sending premium messages, specify which category the service is",
                        "type": "integer"
                    },
                    "tariff": {
                        "description": "Price, in local currency, in 1/100 of currency",
                        "type": "integer",
                        "default": 0
                    },
                    "currency": {
                        "description": "The currency should be set if the default country currency not to be used.",
                        "$ref": "#/components/schemas/Currency"
                    },
                    "useDeliveryReport": {
                        "type": "boolean",
                        "description": "True indicates that a delivery report should be sent back when the message has come to a final state"
                    },
                    "deliveryReportGates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more gates that should be used for sending delivery reports"
                    },
                    "relativeValidityTime": {
                        "description": "This specifies how long (in milliseconds) the message is supposed to live",
                        "type": "integer",
                        "format": "long",
                        "default": 172800000
                    },
                    "absoluteValidityTime": {
                        "description": "The absolute time when a message should expire",
                        "type": "string",
                        "format": "date-time"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The Platform ID provided by LINK Mobility"
                    },
                    "platformPartnerId": {
                        "type": "string",
                        "description": "The Platform Partner ID provided by LINK Mobility"
                    },
                    "moReferenceId": {
                        "description": "A reference to the ID of the MO message which triggered the MT message",
                        "type": "string"
                    },
                    "refId": {
                        "type": "string",
                        "description": "Your own internal transaction ID"
                    },
                    "ignoreResponse":{
                        "type": "boolean",
                        "description": "Indicates whether you want a response in the body when you submit the message."
                    },
                    "customParameters": {
                        "description": "Additional parameters may be specified if needed",
                        "type": "object"
                    }
                }
            },
            "SmsBatchSendRequest": {
                "type": "object",
                "description": "A batch of messages that are sent in a single operation",
                "required": [
                    "platformId",
                    "platformPartnerId"
                ],
                "properties": {
                    "useDeliveryReport": {
                        "type": "boolean",
                        "description": "True indicates that a delivery report should be sent back when the message has come to a final state"
                    },
                    "deliveryReportGates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more gates that should be used for sending delivery reports"
                    },
                    "relativeValidityTime": {
                        "description": "This specifies how long (in milliseconds) the message is supposed to live",
                        "type": "integer",
                        "format": "long",
                        "default": 172800000
                    },
                    "absoluteValidityTime": {
                        "type": "string",
                        "format": "date"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The Platform ID provided by LINK Mobility"
                    },
                    "platformPartnerId": {
                        "type": "string",
                        "description": "The Platform Partner ID provided by LINK Mobility"
                    },
                    "ignoreResponse":{
                        "type": "boolean",
                        "description": "Indicates whether you want a response in the body when you submit the message."
                    },
                    "customParameters": {
                        "type": "object"
                    },
                    "sendRequestMessages": {
                        "type": "array",
                        "items": {
                            "minItems": 1,
                            "maxItems": 1000,
                            "$ref": "#/components/schemas/SmsBatchMessage"
                        }
                    }                   
                }
            },
            "SmsBatchMessage": {
                "type": "object",
                "description": "A single message within a batch",
                "required": [
                    "source",
                    "destination"
                ],
                "properties": {
                    "source": {
                        "nullable": false,
                        "description": " This is the source number from where the message should be sent",
                        "type": "string"
                    },
                    "sourceTON":{
                        "nullable": true,
                        "description": "This is the source type of number. See allowed TON values below.",
                        "default": "ALPHANUMERIC",
                        "$ref": "#/components/schemas/TypeOfNumber"
                    },
                    "destination":{
                        "nullable": false,
                        "description": "This is the destination number",
                        "type": "string"
                    },
                    "destinationTON":{
                        "nullable": true,
                        "description": "This is the destination type of number",
                        "default": "MSISDN",
                        "$ref": "#/components/schemas/TypeOfNumber"
                    },
                    "dcs": {
                        "description": "This is the Data Coding Scheme that should be used when sending the SMS",
                        "default": "TEXT",
                        "$ref": "#/components/schemas/DataCodingScheme"
                    },
                    "userDataHeader": {
                        "type": "string",
                        "description": "This value may be specified when sending concatenated SMS, WAP-push, etc. The format is hex encoded 8-bit bytes"
                    },
                    "userData": {
                        "type": "string",
                        "description": "This is the message content itself. The DCS specifies the format (encoding) on this value"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/Priority",
                        "description": "Specifies the priority to be given to the message"
                    },
                    "age": {
                        "description": "Allowed age for (adult) content",
                        "type": "integer"
                    },
                    "productDescription": {
                        "description": "When sending premium messages, a description of the service",
                        "type": "string"
                    },
                    "productCategory": {
                        "description": "When sending premium messages, specify which category the service is",
                        "type": "integer"
                    },
                    "tariff": {
                        "description": "Price, in local currency, in 1/100 of currency",
                        "type": "integer",
                        "default": 0
                    },
                    "currency": {
                        "description": "The currency should be set if the default country currency not to be used.",
                        "$ref": "#/components/schemas/Currency"
                    },
                    "moReferenceId": {
                        "description": "A reference to the ID of the MO message which triggered the MT message",
                        "type": "string"
                    }
                }
            },
            "SmsSendResult": {
                "description": "The result of a SMS Send operation",
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "description": "The unique identifier of the message handled by LINK Mobility"
                    },
                    "resultCode": {
                        "type": "integer",
                        "description": "Indicates the code of the "
                    },
                    "description": {
                        "type": "string",
                        "description": "A descriptive message of the result"
                    },
                    "smsCount": {
                        "type": "integer",
                        "description": "The number of SMS messages produced by the request"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Route": {
                "type": "object",
                "required": [
                    "type",
                    "number",
                    "platformId",
                    "platformPartnerId"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the route, generated when created"
                    },
                    "refId": {
                        "type": "string",
                        "description": "Id supplied by the client"
                    },
                    "type": {
                        "description": "The type of route",
                        "$ref": "#/components/schemas/RouteType",
                        "nullable": false
                    },
                    "keyword": {
                        "type": "string",
                        "description": "The keyword of the route (if the type is KEYWORD_ROUTE)"
                    },
                    "keywordType": {
                        "description": "Defines the type of keyword matching (if the route type is KEYWORD_ROUTE)",
                        "$ref": "#/components/schemas/KeywordType"
                    },
                    "active": {
                        "description": "Indicates is the route is active",
                        "type": "boolean",
                        "default": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Either a shortCode or a longnumber formatted as a MSISDN",
                        "nullable": false
                    },
                    "start": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The time when the route should start to be active"
                    },
                    "end": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The time when the route should end to be active"
                    },
                    "platformId": {
                        "type": "string",
                        "nullable": false,
                        "description": "The Platorm ID provided by LINK Mobility"
                    },
                    "platformPartnerId": {
                        "description": "The ID of the Partner provided by LINK Mobility",
                        "type":"string"
                    },
                    "platformServiceType": {
                        "description": "] The type of the platform service",
                        "type": "string"
                    },
                    "platformServiceId": {
                        "description": "] The Id of the platform service",
                        "type": "string"
                    },
                    "shared": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates if the keyword may be registered multiple times"
                    },
                    "notifyStop": {
                        "type": "boolean",
                        "nullable": false,
                        "description": "Indicates that stop notifications should be forwarded for this keyword"
                    },
                    "customParameters": {
                        "type": "object",
                        "description": " Additional parameters may be specified if needed"
                    }
                }
            },
            "KeywordType": {
                "type": "string",
                "description": "The type of keyword matching to activate a route",
                "enum": [
                    "DEFAULT",
                    "EQUALS",
                    "FIRST_WORD",
                    "STARTS_WITH"
                ],
                "x-ms-enum": {
                    "name": "KeywordType",
                    "modelAsString": true
                }
            },
            "RouteType": {
                "type": "string",
                "description": "Enumerates the type of routes",
                "enum": [
                    "KEYWORD_ROUTE",
                    "SUBNUMBER_ROUTE"
                ],
                "x-ms-enum": {
                    "name": "RouteType",
                    "modelAsString": true
                }
            },
            "DataCodingScheme": {
                "description": "Specifies the encoding of the message content",
                "type": "string",
                "enum": ["BINARY", "GSM", "TEXT", "UC2"],
                "x-ms-enum": {
                   "name": "DataCodingScheme",
                   "modelAsString": true
                }
            },
            "TypeOfNumber": {
                "description": "Indicates the type of number of a SMS party",
                "type": "string",
                "enum": ["ALPHANUMERIC", "SHORTCODE", "MSISDN"],
                "x-ms-enum":{
                    "name": "TypeOfNumber",
                    "modelAsString": true
                }
            },
            "Currency": {
                "type": "string",
                "enum": ["NOK", "DKK", "SEK", "EUR"],
                "x-ms-enum": {
                    "name": "Currency",
                    "modelAsString": true
                }
            },
            "Priority": {
                "description": "Indicates the priority of a message",
                "type": "string",
                "enum": ["HIGH", "NORMAL", "LOW"],
                "x-ms-enum": {
                    "name": "Priority",
                    "modelAsString": true
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "The credentials provided by LINK Mobility"
            }
        }
    }
}
